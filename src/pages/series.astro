---
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { getAllSeries } from "../utils/content-utils";
import { getPostUrlBySlug } from "../utils/url-utils";

const allSeries = await getAllSeries();

function formatDate(date: Date) {
	const month = (date.getMonth() + 1).toString().padStart(2, "0");
	const day = date.getDate().toString().padStart(2, "0");
	return `${month}-${day}`;
}

function formatTag(tags: string[] | undefined): string {
	if (!tags || tags.length === 0) return "";
	return tags.slice(0, 3).join(", ") + (tags.length > 3 ? "..." : "");
}
---

<MainGridLayout title={i18n(I18nKey.series)}>
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
        <div class="card-base z-10 px-8 py-6 relative w-full">
            <div class="flex flex-col">
                {allSeries.length === 0 ? (
                    <div class="text-50 mt-6 text-center py-8">
                        <div>暂无系列文章</div>
                    </div>
                ) : (
                    <div>
                        {allSeries.map((series) => (
                            <div class="mb-8">
                                <div class="flex flex-row w-full items-center h-[3.75rem]">
                                    <div class="w-[15%] md:w-[10%]">
                                        <div class="h-3 w-3 bg-none rounded-full outline outline-[var(--primary)] mx-auto -outline-offset-[2px] z-50 outline-3"></div>
                                    </div>
                                    <div class="w-[70%] md:w-[80%] transition text-left text-50 flex items-center justify-between">
                                        <div>
                                            <span class="text-xl font-bold text-[var(--primary)] mr-3">{series.name}</span>
                                            <span class="text-sm">
                                                {series.count} {i18n(series.count === 1 ? I18nKey.postCount : I18nKey.postsCount)}
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                {series.posts.map((post) => (
                                    <a
                                        href={getPostUrlBySlug(post.slug)}
                                        aria-label={post.data.title}
                                        class="group btn-plain !block h-10 w-full rounded-lg hover:text-[initial]"
                                    >
                                        <div class="flex flex-row justify-start items-center h-full">
                                            {/* date */}
                                            <div class="w-[15%] md:w-[10%] transition text-sm text-right text-50">
                                                {formatDate(post.data.published)}
                                            </div>

                                            {/* dot and line */}
                                            <div class="w-[15%] md:w-[10%] relative dash-line h-full flex items-center">
                                                <div class="transition-all mx-auto w-1 h-1 rounded group-hover:h-5 bg-[oklch(0.5_0.05_var(--hue))] group-hover:bg-[var(--primary)] outline outline-4 z-50 outline-[var(--card-bg)] group-hover:outline-[var(--btn-plain-bg-hover)] group-active:outline-[var(--btn-plain-bg-active)]"></div>
                                            </div>

                                            {/* post title */}
                                            <div class="w-[70%] md:max-w-[65%] md:w-[65%] text-left font-bold group-hover:translate-x-1 transition-all group-hover:text-[var(--primary)] text-75 pr-8 whitespace-nowrap overflow-ellipsis overflow-hidden">
                                                {post.data.title}
                                            </div>

                                            {/* tag list */}
                                            <div class="hidden md:block md:w-[15%] text-left text-sm transition whitespace-nowrap overflow-ellipsis overflow-hidden text-30">
                                                {formatTag(post.data.tags)}
                                            </div>
                                        </div>
                                    </a>
                                ))}
                            </div>
                        ))}
                    </div>
                )}
            </div>
        </div>
    </div>
</MainGridLayout>
